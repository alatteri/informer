#!/usr/bin/env python

# ------------------------------------------------------------------------------
# START BOOTSTRAP
# ------------------------------------------------------------------------------
try:
    import instinctual
except ImportError, e:
    import os
    import sys
    lib = os.sep.join(os.path.abspath(__file__).split(os.sep)[:-2] + ['lib'])
    sys.path.append(lib)
    import sitecustomize
# ------------------------------------------------------------------------------
# END BOOTSTRAP
# ------------------------------------------------------------------------------

import os
import sys
from commands import getoutput
import instinctual
from instinctual import settings
from django.core.management import execute_manager

conf = instinctual.getConf()
server = "%s:%s" % (conf.get('informer', 'hostname'), conf.get('informer', 'port') or '80')

syncdb = False
commands = []

if 'sqlite3' == settings.DATABASE_ENGINE:
    if not os.path.exists(settings.DATABASE_NAME):
        print "The sqlite database [%s] does not exist." % (settings.DATABASE_NAME)
        syncdb = True
elif settings.DATABASE_ENGINE.startswith('postgresql'):
    if -1 == getoutput('psql -l').find('\n %s' % (settings.DATABASE_NAME)):
        print "The database '%s' does not exist." % (settings.DATABASE_NAME)
        syncdb = True
        commands.append('createdb -U %s %s' % (settings.DATABASE_USER, settings.DATABASE_NAME))

if syncdb:
    yn = raw_input("Would you like to initialize the database? [y/n]: ")
    if yn == 'y':
        for command in commands:
            os.system(command)
        execute_manager(settings, [None, 'syncdb'])

if __name__ == '__main__':
    if len(sys.argv)==2:
        execute_manager(settings, [None, sys.argv[1]])
    else:
        execute_manager(settings, [None, 'runserver', server])
