#!/usr/bin/python

import re
import sys
import os.path
from datetime import datetime

import restclient
from instinctual import informer
from instinctual.parser.subject import DiscreetAppSubject
from instinctual.parser.observer import Observer

LOG = informer.getLogger(sys.argv[0])

class MyObserver(Observer):
    def process(self, event):
        data = {}
        data['now'] = datetime.now().strftime("%m/%d/%y:%H:%M:%S.000")
        data['event'] = event.event
        data['date'] = event.date
        data['shot'] = event.shot
        data['user'] = event.user
        data['setup'] = event.setup
        data['volume'] = event.volume
        data['project'] = event.project
        data['hostname'] = event.hostname

        if event.__class__.__name__ == 'DiscreetAppBatchProcessEvent':
            # joining on '|' is pretty damn ugly...
            data['outputs'] = '|'.join(event.outputs)

        LOG.warn(''.join(['-'*20, 'App Event', '-'*20]))
        for (key, val) in data.items():
            LOG.warn("%s: %s" % (key, val))
        LOG.warn(''.join(['-'*20, '---------', '-'*20]))

        appEventUrl = informer.getAppEventUrl()
        LOG.info(restclient.POST(appEventUrl, data, async=False))

if __name__ == '__main__':
    observer = MyObserver()
    # app = DiscreetAppSubject(sys.argv[1], wait=False)
    app = DiscreetAppSubject(sys.argv[1], wait=True)
    app.registerObserver(observer)
    app.operate()
