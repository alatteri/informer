#!/usr/bin/python

import re
import sys
import os.path

import instinctual.informer
from instinctual.informer.subject import DiscreetAppSubject
from instinctual.informer.observer import Observer

LOG = instinctual.informer.getLogger(sys.argv[0])

class MyObserver(Observer):
    def process(self, event):
        LOG.warn(''.join(['-'*30, 'App Event', '-'*30]))
        LOG.warn('Event: %s' % event.event)
        LOG.warn('Date: %s' % event.date)
        LOG.warn('Shot: %s' % event.shot)
        LOG.warn('User: %s' % event.user)
        LOG.warn('Setup: %s' % event.setup)
        LOG.warn('Volume: %s' % event.volume)
        LOG.warn('Project: %s' % event.project)
        LOG.warn('Hostname: %s' % event.hostname)

        if event.__class__.__name__ == 'DiscreetAppBatchProcessEvent':
            LOG.warn('Batch output[s]: %s' % (', '.join(event.outputs)))
        LOG.warn(''.join(['-'*30, '---------', '-'*30]))

if __name__ == '__main__':
    observer = MyObserver()
    app = DiscreetAppSubject(sys.argv[1])
    app.registerObserver(observer)
    app.operate()
