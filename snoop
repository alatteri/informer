#!/usr/bin/python

import sys

import instinctual.informer
from instinctual.informer.subject import DiscreetLogSubject
from instinctual.informer.observer import *

LOG = instinctual.informer.getLogger(sys.argv[0])

class DiscreetLogWatcher(object):
    def __init__(self, path):
        self._path = path
        self.foo = 'wordup'

    def run(self):
        subject = DiscreetLogSubject(self._path)

        subject.registerObserver(DiscreetLoadProject(self.loadProject))
        subject.registerObserver(DiscreetSpecifyProject(self.specifyProject))
        subject.registerObserver(DiscreetSpecifyVolume(self.specifyVolume))
        subject.registerObserver(DiscreetSpecifyUser(self.specifyUser))
        subject.registerObserver(DiscreetLoadSetup(self.loadSetup))
        subject.registerObserver(DiscreetSaveSetup(self.saveSetup))

        subject.operate()

    def loadProject(self, *args, **kwargs):
        LOG.info("NEW PROJECT LOADED")

    def specifyProject(self, project, **kwargs):
        LOG.info("--- PROJECT: %s" % (project))

    def specifyVolume(self, volume, **kwargs):
        LOG.info("--- VOLUME: %s" % (volume))

    def specifyUser(self, user, **kwargs):
        LOG.info("--- USER: %s" % (user))

    def loadSetup(self, setup, **kwargs):
        LOG.info("--- LOAD SETUP %s", (setup))

    def saveSetup(self, setup, **kwargs):
        LOG.info("--- SAVE SETUP %s", (setup))
        print "hey i am: ", self.foo

if __name__ == '__main__':
    app = DiscreetLogWatcher(sys.argv[1])
    app.run()
